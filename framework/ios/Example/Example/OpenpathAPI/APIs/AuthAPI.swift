//
// AuthAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AuthAPI {
    /**
     Login

     - parameter body: (body)  (optional)
     - returns: DescribeAccessToken200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func login(body: LoginRequest? = nil) async throws -> DescribeAccessToken200Response {
        var requestTask: RequestTask?
        return try await withTaskCancellationHandler {
            try Task.checkCancellation()
            return try await withCheckedThrowingContinuation { continuation in
                guard !Task.isCancelled else {
                    continuation.resume(throwing: CancellationError())
                    return
                }

                requestTask = loginWithRequestBuilder(body: body).execute { result in
                    switch result {
                    case let .success(response):
                        continuation.resume(returning: response.body)
                    case let .failure(error):
                        continuation.resume(throwing: error)
                    }
                }
            }
        } onCancel: { [requestTask] in
            requestTask?.cancel()
        }
    }

    /**
     Login
     - POST /auth/login
     - __Endpoint name__: login
     - parameter body: (body)  (optional)
     - returns: RequestBuilder<DescribeAccessToken200Response>
     */
    open class func loginWithRequestBuilder(body: LoginRequest? = nil)
        -> RequestBuilder<DescribeAccessToken200Response> {
        let localVariablePath = "/auth/login"
        let localVariableURLString = OpenpathAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [:]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<DescribeAccessToken200Response>.Type = OpenpathAPI
            .requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(
            method: "POST",
            URLString: localVariableUrlComponents?.string ?? localVariableURLString,
            parameters: localVariableParameters,
            headers: localVariableHeaderParameters
        )
    }

    /**
     Login all successful matches for email/password

     - parameter body: (body)  (optional)
     - returns: LoginAll201Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func loginAll(body: LoginAllRequest? = nil) async throws -> LoginAll201Response {
        var requestTask: RequestTask?
        return try await withTaskCancellationHandler {
            try Task.checkCancellation()
            return try await withCheckedThrowingContinuation { continuation in
                guard !Task.isCancelled else {
                    continuation.resume(throwing: CancellationError())
                    return
                }

                requestTask = loginAllWithRequestBuilder(body: body).execute { result in
                    switch result {
                    case let .success(response):
                        continuation.resume(returning: response.body)
                    case let .failure(error):
                        continuation.resume(throwing: error)
                    }
                }
            }
        } onCancel: { [requestTask] in
            requestTask?.cancel()
        }
    }

    /**
     Login all successful matches for email/password
     - POST /auth/loginAll
     - __Endpoint name__: loginAll
     - parameter body: (body)  (optional)
     - returns: RequestBuilder<LoginAll201Response>
     */
    open class func loginAllWithRequestBuilder(body: LoginAllRequest? = nil) -> RequestBuilder<LoginAll201Response> {
        let localVariablePath = "/auth/loginAll"
        let localVariableURLString = OpenpathAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [:]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<LoginAll201Response>.Type = OpenpathAPI.requestBuilderFactory
            .getBuilder()

        return localVariableRequestBuilder.init(
            method: "POST",
            URLString: localVariableUrlComponents?.string ?? localVariableURLString,
            parameters: localVariableParameters,
            headers: localVariableHeaderParameters
        )
    }

    /**
     Logout

     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func logout() async throws {
        var requestTask: RequestTask?
        return try await withTaskCancellationHandler {
            try Task.checkCancellation()
            return try await withCheckedThrowingContinuation { continuation in
                guard !Task.isCancelled else {
                    continuation.resume(throwing: CancellationError())
                    return
                }

                requestTask = logoutWithRequestBuilder().execute { result in
                    switch result {
                    case .success:
                        continuation.resume(returning: ())
                    case let .failure(error):
                        continuation.resume(throwing: error)
                    }
                }
            }
        } onCancel: { [requestTask] in
            requestTask?.cancel()
        }
    }

    /**
     Logout
     - POST /auth/logout
     - __JWT is required for this endpoint with at least one of the following scopes__: undefined<br/><br/>__Endpoint name__: logout
     - API Key:
       - type: apiKey Authorization
       - name: jwt
     - returns: RequestBuilder<Void>
     */
    open class func logoutWithRequestBuilder() -> RequestBuilder<Void> {
        let localVariablePath = "/auth/logout"
        let localVariableURLString = OpenpathAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [:]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = OpenpathAPI.requestBuilderFactory
            .getNonDecodableBuilder()

        return localVariableRequestBuilder.init(
            method: "POST",
            URLString: localVariableUrlComponents?.string ?? localVariableURLString,
            parameters: localVariableParameters,
            headers: localVariableHeaderParameters
        )
    }
}
